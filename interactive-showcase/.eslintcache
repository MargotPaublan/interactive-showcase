[{"C:\\Users\\Margot\\Documents\\Cours\\M2\\interactive-showcase\\interactive-showcase\\interactive-showcase\\src\\index.js":"1","C:\\Users\\Margot\\Documents\\Cours\\M2\\interactive-showcase\\interactive-showcase\\interactive-showcase\\src\\App.js":"2","C:\\Users\\Margot\\Documents\\Cours\\M2\\interactive-showcase\\interactive-showcase\\interactive-showcase\\src\\reportWebVitals.js":"3","C:\\Users\\Margot\\Documents\\Cours\\M2\\interactive-showcase\\interactive-showcase\\interactive-showcase\\src\\components\\routes\\ShowcaseView.js":"4","C:\\Users\\Margot\\Documents\\Cours\\M2\\interactive-showcase\\interactive-showcase\\interactive-showcase\\src\\components\\routes\\ShowcaseEditor.js":"5","C:\\Users\\Margot\\Documents\\Cours\\M2\\interactive-showcase\\interactive-showcase\\interactive-showcase\\src\\components\\ConnexionModal.js":"6","C:\\Users\\Margot\\Documents\\Cours\\M2\\interactive-showcase\\interactive-showcase\\interactive-showcase\\src\\components\\Canvas.js":"7"},{"size":504,"mtime":1611768719474,"results":"8","hashOfConfig":"9"},{"size":1413,"mtime":1611785187813,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1611768647400,"results":"11","hashOfConfig":"9"},{"size":994,"mtime":1611785089465,"results":"12","hashOfConfig":"9"},{"size":1704,"mtime":1611788399826,"results":"13","hashOfConfig":"9"},{"size":2938,"mtime":1611768767923,"results":"14","hashOfConfig":"9"},{"size":1472,"mtime":1611788558710,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"fe5wqe",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Margot\\Documents\\Cours\\M2\\interactive-showcase\\interactive-showcase\\interactive-showcase\\src\\index.js",[],["34","35"],"C:\\Users\\Margot\\Documents\\Cours\\M2\\interactive-showcase\\interactive-showcase\\interactive-showcase\\src\\App.js",["36"],"import {HashRouter, Route, Switch} from \"react-router-dom\";\nimport ShowcaseView from './components/routes/ShowcaseView.js'\nimport ShowcaseEditor from './components/routes/ShowcaseEditor.js'\n\nimport React, { useState } from 'react';\n\n\nconst initRect = (itemId) => {\n  return {\n    id: itemId,\n    width: 100,\n    height: 100,\n    fill: \"rgb(204, 242, 255, 0.4)\",\n    cornerRadius: 5,\n    shadowColor: \"black\",\n    shadowBlur: 10,\n    shadowOpacity: 0.1,\n    stroke: 'rgb(118, 173, 184, 0.4)',\n    strokeWidth: 2,\n    x: window.innerWidth/2,\n    y: window.innerHeight/2,\n    draggable: false,\n    infos: {\n      title : \"Collier\",\n      contenu: \"Contenu\"\n    }\n  };\n}\n\nconst initCanvasItems = () => {\n  return [];\n}\n\n\nconst INITIAL_STATE = initCanvasItems();\n\n    \nconst App = (props)=> {\n  const [items, setItems] = useState(INITIAL_STATE);\n  console.log(items);\n\n  const handleCanvasItemsChange = (value) => {\n    setItems(value);\n  }\n \n  return (\n    <HashRouter>\n    <div id=\"app\">\n      <Switch>\n        <Route \n          exact path=\"/showcase-editor\" \n          render={(props) => (\n            <ShowcaseEditor canvasItems={items} onItemsChanged={handleCanvasItemsChange} />\n          )}/>\n        <Route \n          exact path=\"/\" \n          render={(props) => (\n            <ShowcaseView canvasItems={items}/>\n          )}/>\n      </Switch>     \n    </div>\n    </HashRouter>    \n  );\n}\n\nexport default App;\n","C:\\Users\\Margot\\Documents\\Cours\\M2\\interactive-showcase\\interactive-showcase\\interactive-showcase\\src\\reportWebVitals.js",[],"C:\\Users\\Margot\\Documents\\Cours\\M2\\interactive-showcase\\interactive-showcase\\interactive-showcase\\src\\components\\routes\\ShowcaseView.js",["37"],"import Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Gear } from 'react-bootstrap-icons';\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\n\r\nimport ConnexionModal from '../ConnexionModal.js'\r\nimport Canvas from '../Canvas.js'\r\n\r\n\r\nfunction ShowcaseView(props) {\r\n  const [displayConnexionForm, setDisplayConnexionForm] = useState(false);\r\n  const [items, setItems] = useState(props.canvasItems);\r\n  \r\n\r\n  \r\n\r\n  const handleDisplayConnexionChange = (value) => {\r\n    setDisplayConnexionForm(value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"ShowcaseView\">\r\n      <Button \r\n          variant=\"info\"\r\n          onClick={() => setDisplayConnexionForm(true)}>\r\n          <Gear/>\r\n      </Button>\r\n\r\n      <h1>Home - Showcase view</h1>\r\n\r\n      <Canvas canvasItems={items}/>\r\n\r\n      <ConnexionModal displayConnexion={displayConnexionForm} onDisplayConnexionChange={handleDisplayConnexionChange}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShowcaseView;\r\n","C:\\Users\\Margot\\Documents\\Cours\\M2\\interactive-showcase\\interactive-showcase\\interactive-showcase\\src\\components\\routes\\ShowcaseEditor.js",[],"C:\\Users\\Margot\\Documents\\Cours\\M2\\interactive-showcase\\interactive-showcase\\interactive-showcase\\src\\components\\ConnexionModal.js",["38","39"],"import Modal from \"react-bootstrap/Modal\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Gear } from 'react-bootstrap-icons';\r\n\r\nimport {useHistory } from \"react-router-dom\";\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\nfunction ConnexionModal(props) {\r\n  const [show, setConnexionDialogShow] = useState(props.displayConnexion);\r\n  const [showWarning, setWarningShow] = useState(false);\r\n  const [id, setId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const submitAuthentification = () => {\r\n    //Checks authentification API\r\n    //TODO : change const authentification value when we can contact API\r\n    const auth = true;\r\n\r\n\r\n    if (auth) {\r\n        setWarningShow(false);\r\n        setConnexionDialogShow(false)\r\n        history.push(\"/showcase-editor\");\r\n      \r\n    }\r\n\r\n    else {\r\n      setWarningShow(true);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setConnexionDialogShow(props.displayConnexion);\r\n  });\r\n\r\n  return (\r\n    <div className=\"ShowcaseView\">\r\n      <Modal \r\n        show={show}\r\n        onHide={() => setConnexionDialogShow(props.onDisplayConnexionChange(false))}\r\n        dialogClassName=\"modal-90w\"\r\n        aria-labelledby=\"example-custom-modal-styling-title\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Connexion</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formBasicIdentifier\">\r\n              <Form.Label>Identifiant</Form.Label>\r\n              <Form.Control \r\n                placeholder=\"Entrer l'identifiant\"\r\n                value={id}\r\n                onChange={e => setId(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control \r\n                type=\"password\" \r\n                placeholder=\"Mot de passe\"\r\n                value={password}\r\n                onChange={e => setPassword(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n          </Form>\r\n          <Alert \r\n            variant=\"danger\"\r\n            show={showWarning}>\r\n              Failed authentification. Please try again.\r\n          </Alert>\r\n        </Modal.Body>\r\n\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => {\r\n              setWarningShow(false);\r\n              setConnexionDialogShow(props.onDisplayConnexionChange(false));\r\n          }}>\r\n            Annuler\r\n          </Button>\r\n          <Button variant=\"primary\" type=\"submit\" onClick={() => submitAuthentification(false)}>\r\n            Se connecter\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConnexionModal;\r\n","C:\\Users\\Margot\\Documents\\Cours\\M2\\interactive-showcase\\interactive-showcase\\interactive-showcase\\src\\components\\Canvas.js",["40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":8,"column":7,"nodeType":"48","messageId":"49","endLine":8,"endColumn":15},{"ruleId":"46","severity":1,"message":"50","line":15,"column":17,"nodeType":"48","messageId":"49","endLine":15,"endColumn":25},{"ruleId":"46","severity":1,"message":"51","line":6,"column":10,"nodeType":"48","messageId":"49","endLine":6,"endColumn":14},{"ruleId":"52","severity":1,"message":"53","line":38,"column":3,"nodeType":"48","endLine":38,"endColumn":12,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":10,"column":65,"nodeType":"57","messageId":"58","endLine":10,"endColumn":67},{"ruleId":"52","severity":1,"message":"59","line":17,"column":5,"nodeType":"48","endLine":17,"endColumn":14,"suggestions":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'initRect' is assigned a value but never used.","Identifier","unusedVar","'setItems' is assigned a value but never used.","'Gear' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setConnexionDialogShow'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.displayConnexion] as a second argument to the useEffect Hook.",["63"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect contains a call to 'setItems'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.canvasItems] as a second argument to the useEffect Hook.",["64"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},"Add dependencies array: [props.displayConnexion]",{"range":"69","text":"70"},"Add dependencies array: [props.canvasItems]",{"range":"71","text":"72"},[1126,1126],", [props.displayConnexion]",[640,640],", [props.canvasItems]"]